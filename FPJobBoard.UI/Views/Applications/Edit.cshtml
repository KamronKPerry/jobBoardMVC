@model FPJobBoard.DATA.Application
@{
    if (User.IsInRole("Manager") || User.IsInRole("Admin"))
    {
        ViewBag.Title = "Leave a Comment";

    }
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="bg-faded bootstrapFlexSux p-3">
        <h2>@ViewBag.Title</h2>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ApplicationID)
        @Html.HiddenFor(model => model.OpenPositionID)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.ResumeFilename)


        @*<div class="form-group">
                @Html.LabelFor(model => model.OpenPositionID, "OpenPositionID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("OpenPositionID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OpenPositionID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @Html.HiddenFor(model => model.ApplicationDate)

        <div class="form-group">

            @Html.TextAreaFor(model => model.ManagerNotes, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ManagerNotes, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.CheckBoxFor(model => model.IsDeclined, new { @Id = "toggle-one" })
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ResumeFilename, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ResumeFilename, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ResumeFilename, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-success round-edges mr-2" />
            @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-warning round-edges ml-2" })
        </div>
    </div>
}

<div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
