@model FPJobBoard.DATA.Location

@{
    ViewBag.Title = "New Manager";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="bg-faded bootstrapFlexSux">
        <div class="bg-faded bootstrapFlexSux m-3 p-3">
            <h4><strong>@ViewBag.Title</strong></h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.LocationID)
            @Html.HiddenFor(model => model.StoreNumber)
            @Html.HiddenFor(model => model.City)
            @Html.HiddenFor(model => model.State)

            @*<div class="form-group">
                @Html.LabelFor(model => model.StoreNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StoreNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StoreNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>*@

                @Html.LabelFor(model => model.ManagerID, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownList("ManagerID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ManagerID, "", new { @class = "text-danger" })
                </div>

                <div class="p-2 mt-3 buttons-box">
                    <input type="submit" value="Save" class="btn btn-success round-edges mr-2" />
                    @Html.ActionLink("Back to List", "Index",null, new { @class="btn btn-warning round-edges ml-2"})
                </div>
        </div>
    </div>
}

<div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
