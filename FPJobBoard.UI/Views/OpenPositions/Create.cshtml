@model FPJobBoard.DATA.OpenPosition

@{
    ViewBag.Title = "New Position";
}



@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="bootstrapFlexSux bg-faded">
        <div class="bootstrapFlexSux bg-faded m-2 p-3">
    <h2 class="mt-3"><strong>@ViewBag.Title</strong></h2>
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.LabelFor(model => model.PositionID, "Position", htmlAttributes: new { @class = "control-label" })
    <div>
        @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.LocationID, "Location", htmlAttributes: new { @class = "control-label" })
    <div>
        @Html.DropDownList("LocationID", null, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
    </div>
    @Html.LabelFor(model => model.IsOpen, htmlAttributes: new { @class = "control-label" })
        <div class="checkbox">
            @Html.EditorFor(model => model.IsOpen)
            @Html.ValidationMessageFor(model => model.IsOpen, "", new { @class = "text-danger" })
        </div>
    <div>
        <input type="submit" value="Create" class="btn btn-success round-edges" />
        @Html.ActionLink("Back to List", "Index", null, new { @class="btn btn-warning round-edges"})
    </div>
</div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
